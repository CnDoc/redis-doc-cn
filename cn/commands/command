<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8' />
    <link href='../styles.css?1333128600' rel='stylesheet' type='text/css' />
    <link href='../images/favicon.png' rel='shortcut icon' />
    <link href='../opensearch.xml' rel='search' title='Look up a Redis command' type='application/opensearchdescription+xml' />
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js'></script>
    <script async='async' defer='defer' src='../app.js?1375789679'></script>
    <meta content='width=device-width, minimum-scale=1.0, maximum-scale=1.0' name='viewport' />
    <title>
      COMMAND – Redis
    </title>
    <script type='text/javascript'>
      //<![CDATA[
         var _gaq = _gaq || [];
         _gaq.push(['_setAccount', 'UA-20243082-1']);
         _gaq.push(['_trackPageview']);
        
         (function() {
           var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
           ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
           var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
         })();
      //]]>
    </script>
  </head>
  <body class=''><style type="text/css">#modify_div {position: fixed;right: 0px;top: 50px;	background-color: #000000;	height: 30px;width: 100px;border-top-width: 2px;border-right-width: 2px;border-bottom-width: 2px;border-left-width: 2px;border-top-style: dashed;border-right-style: none;border-bottom-style: dashed;border-left-style: dashed;border-top-color: #333333;border-right-color: #333333;border-bottom-color: #333333;border-left-color: #333333;}#modify {display: block;position: fixed;right: 23px;top: 60px;color: #FFFFFF;text-decoration: none;font-size: 12px;font-weight: bold;}#modify:hover {text-decoration: underline;}</style><div id="modify_div"></div><a href="https://github.com/jialechan/redis-doc-cn/edit/gh-pages/cn/commands/command" id="modify" target="_blank">修改本页</a><script>$('#modify_div').css('opacity', '0.6');	</script>
    <header>
      <div class='container'>
        <a href='../index.html'>
          <img alt='Redis' height='30' src='../images/redis.png' width='93' />
        </a>
        <nav>
          <a href='../commands'>Commands</a>
          <a href='../clients'>Clients</a>
          <a href='../documentation'>Documentation</a>
          <a href='../community'>Community</a>
          <a href='../download'>Download</a>
          <a href='https://github.com/antirez/redis/issues'>Issues</a>
          <a href='../support'>Support</a>
          <a href='../topics/license'>License</a>
        </nav>
      </div>
    </header>
    <div class='text'>
      <h1 class='command'>
        <span class='name'>COMMAND</span>
      </h1>
      <article>
        <aside>
          <h2>
            Related commands
          </h2>
          <ul>
            <li>
              <a href='bgrewriteaof'>
                BGREWRITEAOF
              </a>
            </li>
            <li>
              <a href='bgsave'>
                BGSAVE
              </a>
            </li>
            <li>
              <a href='client-getname'>
                CLIENT GETNAME
              </a>
            </li>
            <li>
              <a href='client-kill'>
                CLIENT KILL
              </a>
            </li>
            <li>
              <a href='client-list'>
                CLIENT LIST
              </a>
            </li>
            <li>
              <a href='client-pause'>
                CLIENT PAUSE
              </a>
            </li>
            <li>
              <a href='client-setname'>
                CLIENT SETNAME
              </a>
            </li>
            <li>
              <a href='cluster-slots'>
                CLUSTER SLOTS
              </a>
            </li>
            <li>
              <a href='command'>
                <strong>COMMAND</strong>
              </a>
            </li>
            <li>
              <a href='command-count'>
                COMMAND COUNT
              </a>
            </li>
            <li>
              <a href='command-getkeys'>
                COMMAND GETKEYS
              </a>
            </li>
            <li>
              <a href='command-info'>
                COMMAND INFO
              </a>
            </li>
            <li>
              <a href='config-get'>
                CONFIG GET
              </a>
            </li>
            <li>
              <a href='config-resetstat'>
                CONFIG RESETSTAT
              </a>
            </li>
            <li>
              <a href='config-rewrite'>
                CONFIG REWRITE
              </a>
            </li>
            <li>
              <a href='config-set'>
                CONFIG SET
              </a>
            </li>
            <li>
              <a href='dbsize'>
                DBSIZE
              </a>
            </li>
            <li>
              <a href='debug-object'>
                DEBUG OBJECT
              </a>
            </li>
            <li>
              <a href='debug-segfault'>
                DEBUG SEGFAULT
              </a>
            </li>
            <li>
              <a href='flushall'>
                FLUSHALL
              </a>
            </li>
            <li>
              <a href='flushdb'>
                FLUSHDB
              </a>
            </li>
            <li>
              <a href='info'>
                INFO
              </a>
            </li>
            <li>
              <a href='lastsave'>
                LASTSAVE
              </a>
            </li>
            <li>
              <a href='monitor'>
                MONITOR
              </a>
            </li>
            <li>
              <a href='role'>
                ROLE
              </a>
            </li>
            <li>
              <a href='save'>
                SAVE
              </a>
            </li>
            <li>
              <a href='shutdown'>
                SHUTDOWN
              </a>
            </li>
            <li>
              <a href='slaveof'>
                SLAVEOF
              </a>
            </li>
            <li>
              <a href='slowlog'>
                SLOWLOG
              </a>
            </li>
            <li>
              <a href='sync'>
                SYNC
              </a>
            </li>
            <li>
              <a href='time'>
                TIME
              </a>
            </li>
          </ul>
        </aside>
        <div class='metadata'>
          <p><strong>Available since 2.8.13.</strong></p>
          <p><strong>Time complexity:</strong> O(N) where N is the total number of Redis commands</p>
        </div>
        <p>Returns <a href="../topics/protocol#array-reply">Array reply</a> of details about all Redis commands.</p>
        
        <p>Cluster clients must be aware of key positions in commands so commands can go to matching instances,
        but Redis commands vary between accepting one key,
        multiple keys, or even multiple keys separated by other data.</p>
        
        <p>You can use <a href="command">COMMAND</a> to cache a mapping between commands and key positions for
        each command to enable exact routing of commands to cluster instances.</p>
        
        <h2>Nested Result Array</h2>
        
        <p>Each top-level result contains six nested results.  Each nested result is:</p>
        
        <ul>
        <li>command name</li>
        <li>command arity specification</li>
        <li>nested <a href="../topics/protocol#array-reply">Array reply</a> of command flags</li>
        <li>position of first key in argument list</li>
        <li>position of last key in argument list</li>
        <li>step count for locating repeating keys</li>
        </ul>
        
        <h3>Command Name</h3>
        
        <p>Command name is the command returned as a lowercase string.</p>
        
        <h3>Command Arity</h3>
        
        <table style="width:50%">
        <tr><td>
        <pre>&#x000A;<code>1) 1) "get"&#x000A;   2) (integer) 2&#x000A;   3) 1) readonly&#x000A;   4) (integer) 1&#x000A;   5) (integer) 1&#x000A;   6) (integer) 1&#x000A;</code></pre>
        </td>
        <td>
        <pre>&#x000A;<code>1) 1) "mget"&#x000A;   2) (integer) -2&#x000A;   3) 1) readonly&#x000A;   4) (integer) 1&#x000A;   5) (integer) -1&#x000A;   6) (integer) 1&#x000A;</code></pre>
        </td></tr>
        </table>
        
        <p>Command arity follows a simple pattern:</p>
        
        <ul>
        <li>positive if command has fixed number of required arguments.</li>
        <li>negative if command has minimum number of required arguments, but may have more.</li>
        </ul>
        
        <p>Command arity <em>includes</em> counting the command name itself.</p>
        
        <p>Examples:</p>
        
        <ul>
        <li><a href="get">GET</a> arity is 2 since the command only accepts one
        argument and always has the format <code>GET _key_</code>.</li>
        <li><a href="mget">MGET</a> arity is -2 since the command accepts at a minimum
        one argument, but up to an unlimited number: <code>MGET _key1_ [key2] [key3] ...</code>.</li>
        </ul>
        
        <p>Also note with <a href="mget">MGET</a>, the -1 value for &quot;last key position&quot; means the list
        of keys may have unlimited length.</p>
        
        <h3>Flags</h3>
        
        <p>Command flags is <a href="../topics/protocol#array-reply">Array reply</a> containing one or more status replies:</p>
        
        <ul>
        <li><em>write</em> - command may result in modifications</li>
        <li><em>readonly</em> - command will never modify keys</li>
        <li><em>denyoom</em> - reject command if currently OOM</li>
        <li><em>admin</em> - server admin command</li>
        <li><em>pubsub</em> - pubsub-related command</li>
        <li><em>noscript</em> - deny this command from scripts</li>
        <li><em>random</em> - command has random results, dangerous for scripts</li>
        <li><em>sort_for_script</em> - if called from script, sort output</li>
        <li><em>loading</em> - allow command while database is loading</li>
        <li><em>stale</em> - allow command while replica has stale data</li>
        <li><em>skip_monitor</em> - do not show this command in MONITOR</li>
        <li><em>asking</em> - cluster related - accept even if importing</li>
        <li><em>fast</em> - command operates in constant or log(N) time.  Used for latency monitoring.</li>
        <li><em>movablekeys</em> - keys have no pre-determined position.  You must discover keys yourself.</li>
        </ul>
        
        <h3>Movable Keys</h3>
        
        <pre><code>1) 1) &quot;sort&quot;&#x000A;   2) (integer) -2&#x000A;   3) 1) write&#x000A;      2) denyoom&#x000A;      3) movablekeys&#x000A;   4) (integer) 1&#x000A;   5) (integer) 1&#x000A;   6) (integer) 1&#x000A;</code></pre>
        
        <p>Some Redis commands have no predetermined key locations.  For those commands,
        flag <code>movablekeys</code> is added to the command flags <a href="../topics/protocol#array-reply">Array reply</a>.  Your Redis
        Cluster client needs to parse commands marked <code>movabkeleys</code> to locate all relevant key positions.</p>
        
        <p>Complete list of commands currently requiring key location parsing:</p>
        
        <ul>
        <li><a href="sort">SORT</a> - optional <code>STORE</code> key, optional <code>BY</code> weights, optional <a href="get">GET</a> keys</li>
        <li><a href="zunionstore">ZUNIONSTORE</a> - keys stop when <code>WEIGHT</code> or <code>AGGREGATE</code> starts</li>
        <li><a href="zinterstore">ZINTERSTORE</a> - keys stop when <code>WEIGHT</code> or <code>AGGREGATE</code> starts</li>
        <li><a href="eval">EVAL</a> - keys stop after <code>numkeys</code> count arguments</li>
        <li><a href="evalsha">EVALSHA</a> - keys stop after <code>numkeys</code> count arguments</li>
        </ul>
        
        <p>Also see <code>COMMAND GETKEYS</code> for getting your Redis server tell you where keys
        are in any given command.</p>
        
        <h3>First Key in Argument List</h3>
        
        <p>For most commands the first key is position 1.  Position 0 is
        always the command name itself.</p>
        
        <h3>Last Key in Argument List</h3>
        
        <p>Redis commands usually accept one key, two keys, or an unlimited number of keys.</p>
        
        <p>If a command accepts one key, the first key and last key positions is 1.</p>
        
        <p>If a command accepts two keys (e.g. <a href="brpoplpush">BRPOPLPUSH</a>, <a href="smove">SMOVE</a>, <a href="rename">RENAME</a>, ...) then the
        last key position is the location of the last key in the argument list.</p>
        
        <p>If a command accepts an unlimited number of keys, the last key position is -1.</p>
        
        <h3>Step Count</h3>
        
        <table style="width:50%">
        <tr><td>
        <pre>&#x000A;<code>1) 1) "mset"&#x000A;   2) (integer) -3&#x000A;   3) 1) write&#x000A;      2) denyoom&#x000A;   4) (integer) 1&#x000A;   5) (integer) -1&#x000A;   6) (integer) 2&#x000A;</code></pre>
        </td>
        <td>
        <pre>&#x000A;<code>1) 1) "mget"&#x000A;   2) (integer) -2&#x000A;   3) 1) readonly&#x000A;   4) (integer) 1&#x000A;   5) (integer) -1&#x000A;   6) (integer) 1&#x000A;</code></pre>
        </td></tr>
        </table>
        
        <p>Key step count allows us to find key positions in commands
        like <a href="mset">MSET</a> where the format is <code>MSET _key1_ _val1_ [key2] [val2] [key3] [val3]...</code>.</p>
        
        <p>In the case of <a href="mset">MSET</a>, keys are every other position so the step value is 2.  Compare
        with <a href="mget">MGET</a> above where the step value is just 1.</p>
        
        <h2>Return value</h2>
        
        <p><a href="../topics/protocol#array-reply">Array reply</a>: nested list of command details.  Commands are returned
        in random order.</p>
        
        <h2>Examples</h2>
        
        <div class='example' data-session='d271d67e2a7da29beaa5279c6db58434'>
          <span class='monospace prompt'>redis&gt;&nbsp;</span>
          <span class='monospace command'>COMMAND</span>
          <pre>1) 1) "pfcount"&#x000A;     2) (integer) -2&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;  2) 1) "command"&#x000A;     2) (integer) 0&#x000A;     3) 1) readonly&#x000A;        2) loading&#x000A;        3) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;  3) 1) "zscan"&#x000A;     2) (integer) -3&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;  4) 1) "echo"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;  5) 1) "select"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) loading&#x000A;        3) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;  6) 1) "zcount"&#x000A;     2) (integer) 4&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;  7) 1) "substr"&#x000A;     2) (integer) 4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;  8) 1) "pttl"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;  9) 1) "hincrbyfloat"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 10) 1) "hlen"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 11) 1) "incrby"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 12) 1) "setex"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 13) 1) "persist"&#x000A;     2) (integer) 2&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 14) 1) "setbit"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 15) 1) "info"&#x000A;     2) (integer) -1&#x000A;     3) 1) readonly&#x000A;        2) loading&#x000A;        3) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 16) 1) "scard"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 17) 1) "srandmember"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 18) 1) "lrem"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 19) 1) "append"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 20) 1) "hgetall"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 21) 1) "zincrby"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 22) 1) "rpop"&#x000A;     2) (integer) 2&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 23) 1) "cluster"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 24) 1) "ltrim"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 25) 1) "flushdb"&#x000A;     2) (integer) 1&#x000A;     3) 1) write&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 26) 1) "rpoplpush"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 2&#x000A;     6) (integer) 1&#x000A; 27) 1) "expire"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 28) 1) "psync"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) noscript&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 29) 1) "zremrangebylex"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 30) 1) "pubsub"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) pubsub&#x000A;        3) random&#x000A;        4) loading&#x000A;        5) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 31) 1) "setnx"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 32) 1) "pexpireat"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 33) 1) "psubscribe"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) pubsub&#x000A;        3) noscript&#x000A;        4) loading&#x000A;        5) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 34) 1) "zrevrange"&#x000A;     2) (integer) -4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 35) 1) "hmget"&#x000A;     2) (integer) -3&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 36) 1) "object"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;     4) (integer) 2&#x000A;     5) (integer) 2&#x000A;     6) (integer) 2&#x000A; 37) 1) "watch"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) noscript&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A; 38) 1) "setrange"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 39) 1) "sdiffstore"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A; 40) 1) "flushall"&#x000A;     2) (integer) 1&#x000A;     3) 1) write&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 41) 1) "sadd"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 42) 1) "renamenx"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 2&#x000A;     6) (integer) 1&#x000A; 43) 1) "zrangebyscore"&#x000A;     2) (integer) -4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 44) 1) "bitop"&#x000A;     2) (integer) -4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 2&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A; 45) 1) "get"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 46) 1) "hmset"&#x000A;     2) (integer) -4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 47) 1) "type"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 48) 1) "evalsha"&#x000A;     2) (integer) -3&#x000A;     3) 1) noscript&#x000A;        2) movablekeys&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 49) 1) "zrevrangebyscore"&#x000A;     2) (integer) -4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 50) 1) "set"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 51) 1) "getset"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 52) 1) "punsubscribe"&#x000A;     2) (integer) -1&#x000A;     3) 1) readonly&#x000A;        2) pubsub&#x000A;        3) noscript&#x000A;        4) loading&#x000A;        5) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 53) 1) "publish"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) pubsub&#x000A;        3) loading&#x000A;        4) stale&#x000A;        5) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 54) 1) "lset"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 55) 1) "rename"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) 2&#x000A;     6) (integer) 1&#x000A; 56) 1) "bgsave"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 57) 1) "decrby"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 58) 1) "sunion"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) sort_for_script&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A; 59) 1) "blpop"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) noscript&#x000A;     4) (integer) 1&#x000A;     5) (integer) -2&#x000A;     6) (integer) 1&#x000A; 60) 1) "zrem"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 61) 1) "readonly"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 62) 1) "exists"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 63) 1) "linsert"&#x000A;     2) (integer) 5&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 64) 1) "lindex"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 65) 1) "scan"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 66) 1) "migrate"&#x000A;     2) (integer) -6&#x000A;     3) 1) write&#x000A;        2) admin&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 67) 1) "ping"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) stale&#x000A;        3) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 68) 1) "zunionstore"&#x000A;     2) (integer) -4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) movablekeys&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 69) 1) "latency"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) noscript&#x000A;        4) loading&#x000A;        5) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 70) 1) "role"&#x000A;     2) (integer) 1&#x000A;     3) 1) admin&#x000A;        2) noscript&#x000A;        3) loading&#x000A;        4) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 71) 1) "ttl"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 72) 1) "del"&#x000A;     2) (integer) -2&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A; 73) 1) "wait"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) noscript&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 74) 1) "zscore"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 75) 1) "zrevrangebylex"&#x000A;     2) (integer) -4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 76) 1) "sscan"&#x000A;     2) (integer) -3&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 77) 1) "incrbyfloat"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 78) 1) "decr"&#x000A;     2) (integer) 2&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 79) 1) "getbit"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 80) 1) "spop"&#x000A;     2) (integer) 2&#x000A;     3) 1) write&#x000A;        2) noscript&#x000A;        3) random&#x000A;        4) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 81) 1) "hkeys"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) sort_for_script&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 82) 1) "pfmerge"&#x000A;     2) (integer) -2&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A; 83) 1) "zrange"&#x000A;     2) (integer) -4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 84) 1) "monitor"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) noscript&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 85) 1) "zinterstore"&#x000A;     2) (integer) -4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) movablekeys&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 86) 1) "rpushx"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 87) 1) "llen"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 88) 1) "hincrby"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 89) 1) "save"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) noscript&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 90) 1) "zremrangebyrank"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 91) 1) "auth"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) noscript&#x000A;        3) loading&#x000A;        4) stale&#x000A;        5) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 92) 1) "zcard"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 93) 1) "psetex"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 94) 1) "shutdown"&#x000A;     2) (integer) -1&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) loading&#x000A;        4) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 95) 1) "sync"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) noscript&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 96) 1) "dbsize"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 97) 1) "expireat"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A; 98) 1) "subscribe"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) pubsub&#x000A;        3) noscript&#x000A;        4) loading&#x000A;        5) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A; 99) 1) "brpop"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) noscript&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;100) 1) "sort"&#x000A;     2) (integer) -2&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) movablekeys&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;101) 1) "sunionstore"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A;102) 1) "zrangebylex"&#x000A;     2) (integer) -4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;103) 1) "zlexcount"&#x000A;     2) (integer) 4&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;104) 1) "lpush"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;105) 1) "incr"&#x000A;     2) (integer) 2&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;106) 1) "mget"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A;107) 1) "getrange"&#x000A;     2) (integer) 4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;108) 1) "slaveof"&#x000A;     2) (integer) 3&#x000A;     3) 1) admin&#x000A;        2) noscript&#x000A;        3) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;109) 1) "bitpos"&#x000A;     2) (integer) -3&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;110) 1) "rpush"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;111) 1) "config"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;112) 1) "srem"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;113) 1) "mset"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 2&#x000A;114) 1) "lrange"&#x000A;     2) (integer) 4&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;115) 1) "replconf"&#x000A;     2) (integer) -1&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) noscript&#x000A;        4) loading&#x000A;        5) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;116) 1) "hsetnx"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;117) 1) "discard"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) noscript&#x000A;        3) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;118) 1) "pexpire"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;119) 1) "pfdebug"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;120) 1) "asking"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;121) 1) "client"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;122) 1) "pfselftest"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;123) 1) "bgrewriteaof"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;124) 1) "zremrangebyscore"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;125) 1) "sinterstore"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A;126) 1) "lpushx"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;127) 1) "restore"&#x000A;     2) (integer) -4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) admin&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;128) 1) "unsubscribe"&#x000A;     2) (integer) -1&#x000A;     3) 1) readonly&#x000A;        2) pubsub&#x000A;        3) noscript&#x000A;        4) loading&#x000A;        5) stale&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;129) 1) "zrank"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;130) 1) "readwrite"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;131) 1) "hget"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;132) 1) "bitcount"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;133) 1) "randomkey"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;134) 1) "restore-asking"&#x000A;     2) (integer) -4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) admin&#x000A;        4) asking&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;135) 1) "time"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;        3) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;136) 1) "zrevrank"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;137) 1) "hset"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;138) 1) "sinter"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) sort_for_script&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A;139) 1) "dump"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;140) 1) "move"&#x000A;     2) (integer) 3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;141) 1) "strlen"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;142) 1) "unwatch"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) noscript&#x000A;        3) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;143) 1) "lpop"&#x000A;     2) (integer) 2&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;144) 1) "smembers"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) sort_for_script&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;145) 1) "msetnx"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 2&#x000A;146) 1) "pfadd"&#x000A;     2) (integer) -2&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;147) 1) "zadd"&#x000A;     2) (integer) -4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;148) 1) "lastsave"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;        3) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;149) 1) "exec"&#x000A;     2) (integer) 1&#x000A;     3) 1) noscript&#x000A;        2) skip_monitor&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;150) 1) "sismember"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;151) 1) "debug"&#x000A;     2) (integer) -2&#x000A;     3) 1) admin&#x000A;        2) noscript&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;152) 1) "slowlog"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;153) 1) "hexists"&#x000A;     2) (integer) 3&#x000A;     3) 1) readonly&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;154) 1) "eval"&#x000A;     2) (integer) -3&#x000A;     3) 1) noscript&#x000A;        2) movablekeys&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;155) 1) "smove"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 2&#x000A;     6) (integer) 1&#x000A;156) 1) "multi"&#x000A;     2) (integer) 1&#x000A;     3) 1) readonly&#x000A;        2) noscript&#x000A;        3) fast&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;157) 1) "sdiff"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) sort_for_script&#x000A;     4) (integer) 1&#x000A;     5) (integer) -1&#x000A;     6) (integer) 1&#x000A;158) 1) "hscan"&#x000A;     2) (integer) -3&#x000A;     3) 1) readonly&#x000A;        2) random&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;159) 1) "brpoplpush"&#x000A;     2) (integer) 4&#x000A;     3) 1) write&#x000A;        2) denyoom&#x000A;        3) noscript&#x000A;     4) (integer) 1&#x000A;     5) (integer) 2&#x000A;     6) (integer) 1&#x000A;160) 1) "script"&#x000A;     2) (integer) -2&#x000A;     3) 1) readonly&#x000A;        2) admin&#x000A;        3) noscript&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;161) 1) "keys"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) sort_for_script&#x000A;     4) (integer) 0&#x000A;     5) (integer) 0&#x000A;     6) (integer) 0&#x000A;162) 1) "hdel"&#x000A;     2) (integer) -3&#x000A;     3) 1) write&#x000A;        2) fast&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1&#x000A;163) 1) "hvals"&#x000A;     2) (integer) 2&#x000A;     3) 1) readonly&#x000A;        2) sort_for_script&#x000A;     4) (integer) 1&#x000A;     5) (integer) 1&#x000A;     6) (integer) 1</pre><form>
            <span class='monospace prompt'>redis&gt;&nbsp;</span>
            <input autocomplete='off' name='command' spellcheck='false' type='text' />
          </form></div>
      </article>
    </div>
    <div class='text' id='comments'>
      <div id='disqus_thread'></div>
      <script type='text/javascript'>
        //<![CDATA[
          var disqus_shortname = 'redisio';
          
          // The following are highly recommended additional parameters. Remove the slashes in front to use.
          var disqus_identifier = 'command_command';
          var disqus_url = 'http://redis.io/commands/command';
          
          /* * * DON'T EDIT BELOW THIS LINE * * */
          (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
              dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
              (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
          })();
        //]]>
      </script>
      <a class='dsq-brlink' href='http://disqus.com'>
        Comments powered by
        <span class='logo-disqus'>
          Disqus
        </span>
      </a>
    </div>
    <footer>
      <p>
        This website is
        <a href="https://github.com/antirez/redis-io">open source software</a>
        developed by <a href="http://citrusbyte.com">Citrusbyte</a>.
        <br> The Redis logo was designed by <a href="http://www.carlosprioglio.com/">Carlos Prioglio</a>. See more <a href="../topics/sponsors">credits</a>.
      </p>
      <div class='sponsor'>
        Sponsored by
        <a href='http://www.gopivotal.com/products/redis'>
          <img alt='Redis Support' height='25' src='../images/pivotal.png' title='Redis Sponsor' width='99' />
        </a>
      </div>
    </footer>
  </body>
</html>
<script type="text/javascript">
lloogg_clientid = "20bb9c026e";
</script>
<script type="text/javascript" src="http://demo.lloogg.com/l.js?c=20bb9c026e">
</script>
